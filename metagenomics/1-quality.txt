================================================
1. Quality Trimming and Filtering Your Sequences
================================================
Boot up an m1.xlarge machine from Amazon Web Services running Ubuntu 12.04 LTS (ami-59a4a230); this has about 15 GB of RAM, and 2 CPUs, and
will be enough to complete the assembly of the example data set.

On the new machine, run the following commands to update the base
software and reboot the machine::

   apt-get update
   apt-get -y install screen git curl gcc make g++ python-dev unzip default-jre \
              pkg-config libncurses5-dev r-base-core r-cran-gplots python-matplotlib\
              sysstat && shutdown -r now


.. note::

   Some of these commands may take a very long time.  Please see
   :doc:`../amazon/using-screen`.

Install software
================

Install `khmer <http://khmer.readthedocs.org/>`__::

    sudo -i
    cd /usr/local/share
    git clone https://github.com/ged-lab/khmer.git
    cd khmer
    git checkout v1.0
    make install

.. @@ ping.

Install `Trimmomatic <http://www.usadellab.org/cms/?page=trimmomatic>`__::

    cd /root
    curl -O http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.30.zip
    unzip Trimmomatic-0.30.zip
    cd Trimmomatic-0.30/
    cp trimmomatic-0.30.jar /usr/local/bin
    cp -r adapters /usr/local/share/adapters


Install `libgtextutils and fastx <http://hannonlab.cshl.edu/fastx_toolkit/>`__::

    cd /root
    curl -O http://hannonlab.cshl.edu/fastx_toolkit/libgtextutils-0.6.1.tar.bz2
    tar xjf libgtextutils-0.6.1.tar.bz2
    cd libgtextutils-0.6.1/
    ./configure && make && make install

    cd /root
    curl -O http://hannonlab.cshl.edu/fastx_toolkit/fastx_toolkit-0.0.13.2.tar.bz2
    tar xjf fastx_toolkit-0.0.13.2.tar.bz2
    cd fastx_toolkit-0.0.13.2/
    ./configure && make && make install


In each of these cases, we're downloading the software -- you can use
google to figure out what each package is and does if we don't discuss
it below.  We're then unpacking it, sometimes compiling it (which we
can discuss later), and then installing it for general use.

create a working directory:
===========================

let's create a place to work __::

   cd /mnt
   mkdir work 
   cd work 

Find Your Data:
==============
Download Podar dataset __:: 


    cd /mnt/
    mkdir data
    cd data
    curl -O ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR606/SRR606249/SRR606249_1.fastq.gz
    curl -O ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR606/SRR606249/SRR606249_2.fastq.gz

Linking Your Data:
==================
Create your work directory and link your data to it __::
 
    cd /mnt
    cd work
    ln -fs /data/*.fastq.gz

Note This protocol takes many hours (days!) to run, so you might not want to run it on all the data the first time. If youâ€™re using the example data, you can work with a subset of it by running this command instead of the ln -fs command above:

    for i in /data/*.fastq.gz
    do
        gunzip -c $i | head -1000000 | gzip > $(basename $i)
    done



Trim Your Data:
===============

Trim your data __::
    java -jar /usr/local/bin/trimmomatic-0.30.jar PE SRR606249_?.fastq.gz  s1_pe s1_se s2_pe s2_se ILLUMINACLIP:/usr/local/share/adapters/TruSeq3-PE.fa:2:30:10

# Interleave the remaining paired-end files
    /usr/local/share/khmer/scripts/interleave-reads.py s1_pe s2_pe | gzip -9c >  SRR606249.pe.fq.gz

# Combine the single-ended files
    cat s1_se s2_se | gzip -9c > SRR606249.se.fq.gz

    for i in *.pe.fq.gz *.se.fq.gz
    do
        echo working with $i
        newfile="$(basename $i .fq.gz)"
        gunzip -c $i | fastq_quality_filter -Q33 -q 30 -p 50 | gzip -9c > "${newfile}.qc.fq.gz"
    done

    for i in *.pe.qc.fq.gz
    do
        extract-paired-reads.py $i
    done

    for i in *.pe.qc.fq.gz.pe 
    do
        newfile="$(basename $i .pe.qc.fq.gz.pe).pe.qc.fq"
        rm *.pe.fq.gz 
        mv $i $newfile
        gzip $newfile
    done


    for i in *.pe.qc.fq.gz.se
    do
        otherfile="$(basename $i .pe.qc.fq.gz.se).se.qc.fq.gz"
        gunzip -c $otherfile > combine
        cat $i >> combine
        gzip -c combine > $otherfile
        rm $i combine
    done

# Make it hard to delete the files you just created
    chmod u-w *.qc.fq.gz

Done!  Now you have two files: SRR606249.pe.qc.fq.gz, SRR606249.se.qc.fq.gz.

The '.pe' file are interleaved paired-end; you can take a look at them like so __::

   gunzip -c SRR606249.pe.qc.fq.gz | head

The '.se' files is a single-ended file, where the reads have been
orphaned because we discarded stuff.

All TWO files are in FASTQ format.

----

Next: :doc:`2-diginorm`
